plugins {
    id('java-conventions')
    id "tech.argonariod.gradle-plugin-jimmer" version "latest.release"
    id "com.github.node-gradle.node" version "7.0.2"
}
apply plugin: 'io.spring.dependency-management'
jimmer {
    version = libs.versions.jimmer
}
node {
    nodeProjectDir = file("C:\\Users\\Administrator\\Documents\\Workplace\\Code\\OpenSource\\uni-ai\\uni-ai-admin")
    workDir = file("C:\\Users\\Administrator\\AppData\\Roaming\\nvm\\v20.9.0")
    npmWorkDir = file("C:\\Users\\Administrator\\AppData\\Roaming\\nvm\\v20.9.0\\npm")
}
tasks.register('buildAngularApp', NpxTask) {
//    dependsOn npmInstall
    command = 'npm'
    args = ['build-only']
    inputs.files('package.json', 'package-lock.json', 'angular.json', 'tsconfig.json', 'tsconfig.app.json')
    inputs.dir('src')
    inputs.dir(fileTree("node_modules").exclude(".cache"))
    outputs.dir('dist')
}
repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}
configurations {
    all*.exclude group: 'org.slf4j', module: 'slf4j-simple'
}
dependencies {
    implementation 'org.springframework.ai:spring-ai-redis-store'
    implementation 'org.springframework.ai:spring-ai-tika-document-reader'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.ai:spring-ai-zhipuai-spring-boot-starter'
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
    implementation platform(libs.spring.ai)
    implementation(libs.jaxb.runtime)
    implementation(libs.hutool.all)
    implementation(libs.miniapp.sdk)
    implementation(libs.wxpay.sdk)
    implementation(libs.sa.token.redis)
    implementation(libs.sa.token)
    implementation 'com.mysql:mysql-connector-j'
    implementation 'org.apache.commons:commons-pool2'
    implementation 'org.freemarker:freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework:spring-test'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    compileOnly(project(":generator-core"))
    testImplementation(project(":generator-processor"))
    implementation(project(":spring-ai-kimi-spring-boot-starter"))
    implementation(project(":spring-ai-dashscope-spring-boot-starter"))
    implementation(project(":spring-ai-qianfan-spring-boot-starter"))
    implementation(project(":spring-ai-spark-spring-boot-starter"))
    implementation(project(":common"))
    implementation(project(":spring-boot-starter-security"))
    implementation(project(":spring-boot-starter-oss"))
    implementation(project(":spring-boot-starter-sms"))
}
